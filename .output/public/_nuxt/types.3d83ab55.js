var g=Object.defineProperty;var f=(n,s,t)=>s in n?g(n,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[s]=t;var o=(n,s,t)=>(f(n,typeof s!="symbol"?s+"":s,t),t);class p{constructor(s,t,r,i,e,u,h,a,l,d,b,m,k){o(this,"nr");o(this,"date");o(this,"account");o(this,"km");o(this,"kmSinceLastEntry");o(this,"kmSinceLastFuelFill");o(this,"liters");o(this,"consumption");o(this,"fuelPriceInEuro");o(this,"amount");o(this,"description");o(this,"key");o(this,"rowNr");this.nr=s,this.date=t,this.account=r,this.km=i,this.kmSinceLastEntry=d,this.kmSinceLastFuelFill=b,this.liters=e,this.consumption=m,this.fuelPriceInEuro=u,this.amount=h===""?"0":h,this.description=a,this.key=l,this.rowNr=k||0}}class S{constructor(s,t,r,i,e,u){o(this,"nr");o(this,"date");o(this,"soll");o(this,"haben");o(this,"description");o(this,"kmStart");this.nr=s,this.date=t,this.soll=r,this.haben=i,this.description=e,this.kmStart=u||0}}class c{constructor(s,t){o(this,"name");o(this,"owner");o(this,"bookings",[]);this.name=s,this.owner=t,this.bookings=[]}saldo(){return Math.round(100*+this.bookings.reduce((s,t)=>s+=+t.haben-t.soll,0))/100}saldoY(s){return Number(s)?Math.round(100*+this.bookings.filter(t=>t.date.substring(0,4)===s.toString()).reduce((t,r)=>t+=+r.haben-r.soll,0))/100:this.saldo()}saldoSoll(s){const t=Number(s)?r=>r.date.substring(0,4)===s.toString():r=>!0;return Math.round(100*+this.bookings.filter(r=>t(r)).reduce((r,i)=>r+=i.soll,0))/100}saldoHaben(s){const t=Number(s)?r=>r.date.substring(0,4)===s.toString():r=>!0;return Math.round(100*+this.bookings.filter(r=>t(r)).reduce((r,i)=>r+=i.haben,0))/100}}class w{constructor(s=[],t=[],r=[]){o(this,"accounts",[]);o(this,"hauptbuchBookings",[]);o(this,"Errors",{});o(this,"Errors1",{});o(this,"Konto9000",{});this.hauptbuchBookings=r,this.Errors=new c("Errors","system"),this.Errors1=new c("Errors1","system");for(const i of s)for(const e of t)this.accounts.push(new c(e,i))}findAccount(s,t){return this.accounts.find(r=>r.name===t&&r.owner===s)||this.Errors}saldierenEuro(s){return Math.round(this.accounts.filter(t=>t.owner===s).reduce((t,r)=>r.name!=="Kilometer"?t+=r.saldo():t,0)*100)/100}}export{w as B,p as H,S as a};
